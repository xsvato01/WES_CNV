k8s {
   namespace = 'medgen-ns'
   runAsUser = 1000
   storageClaimName = 'pvc-janlambshare-storage-elixir1-cerit-sc-cz'
   homeDir = "/mnt/shared/MedGen/WES/WES_CNV/pipeline"

   launchDir = "${k8s.homeDir}/launch"
   projectDir = "${k8s.homeDir}/project"
   workDir = "${k8s.homeDir}/temp"
   useJobs = true
   pullPolicy = 'Always'
   storageMountPath = '/mnt'
   computeResourceType = 'Job'
}

params {
   outdir = "/mnt/shared/MedGen/exomy_Zuzka/CNV/HyperExome"
   ref = '/mnt/shared/999993-Bioda/data/ssd_3/references/homsap/GRCh38-p10/seq'
   refindex  = '/mnt/shared/999993-Bioda/data/ssd_3/references/homsap/GRCh38-p10/index/BWA/GRCh38-p10'
   covbed  = "${k8s.projectDir}/xsvato01/WES_CNV/cnvkit_utils/HyperExome_noChr.bed"
   targetBed = "${k8s.projectDir}/xsvato01/WES_CNV/cnvkit_utils/HyperExomeNoChr_targets.bed"
   antitargetBed = "${k8s.projectDir}/xsvato01/WES_CNV/cnvkit_utils/HyperExomeNoChr_antitargets.bed"
   targetBedGeneNames = "${k8s.projectDir}/xsvato01/WES_CNV/cnvkit_utils/HyperExomeTargets_geneSymbolOnlyCCDparsed.bed"
   GrCh38cytomap = "${k8s.projectDir}/xsvato01/WES_CNV/cnvkit_utils/GrCh38.cytoMap.bed"
   GrCh38CNV = "${k8s.projectDir}/xsvato01/WES_CNV/cnvkit_utils/GRCh38.DBzeros.bed"
   genomeLens = "${k8s.projectDir}/xsvato01/WES_CNV/cnvkit_utils/genome.txt"
   rawDataDir = "/mnt/shared/MedGen/sequencing_results/primary_data"
   }


executor {
   queueSize = 50
}

process {
   errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
   cpus = 1
   memory = '1GB'
   maxRetries = 3
   shell = ['/bin/bash', '-euo', 'pipefail']
   container = 'registry.gitlab.ics.muni.cz:443/450402/wes_cnv:9'
   scratch = true
   executor = 'k8s'
   pod = [[securityContext:[fsGroupChangePolicy:'OnRootMismatch', runAsUser:1000, runAsGroup:1, fsGroup:1]], [nodeSelector:'storage=local-ssd']]
   
   withLabel: s_mem {
      memory = {1.GB * task.attempt * (3/4)}
   }
   withLabel: m_mem {
      memory = {4.GB * task.attempt * (3/4)}
   }
   withLabel: l_mem {
      memory = {8.GB * task.attempt * (3/4)}
   }     
   withName: 'xl_mem' {
      memory = {16.GB * task.attempt * (3/4)}
   }
   withName: 'xxl_mem' {
      memory = {16.GB * task.attempt * (3/4)}
   }
   withName: 's_cpu' {
      cpus = 1
   }
   withName: 'm_cpu' {
      cpus = 4
   }
   withName: 'l_cpu' {
      cpus = 8
   }

}

manifest {
defaultBranch = 'main'
}
